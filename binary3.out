[INFO] main.py:39 > Namespace(agem_batch=240, batchsize=16, binary=True, data_dir=None, dataset='cifar10', debug=False, distilling=True, eval_period=100, gpu_transform=True, imp_update_period=1, init_model=False, init_opt=False, log_path='results', lr=0.0003, lr_length=10, lr_period=10, lr_step=0.95, m=10, memory_epoch=256, memory_size=500, mir_cands=50, mode='clib', model_name='resnet18', n=50, n_tasks=5, n_worker=0, note='clib', num_gpus=1, online_iter=1.0, opt_name='adam', reg_coef=100, rnd_seed=1, sched_name='default', temp_batchsize=None, topk=1, transforms=['cutmix', 'autoaug'], use_amp=True, workers_per_gpu=1)
[INFO] main.py:48 > Set the device (cuda)
[INFO] main.py:94 > Using train-transforms Compose(
    RandomCrop(size=(32, 32), padding=4)
    RandomHorizontalFlip(p=0.5)
    AutoAugment(policy=AutoAugmentPolicy.CIFAR10, fill=None)
    ConvertImageDtype()
    Normalize(mean=(0.4914, 0.4822, 0.4465), std=(0.2023, 0.1994, 0.201))
)
[INFO] main.py:104 > [1] Select a CIL method (clib)
-------binary True
[INFO] main.py:110 > [2] Incrementally training 5 tasks

##################################################
# Task 0 iteration
##################################################

[INFO] main.py:123 > [2-1] Prepare a datalist for the current task
Traceback (most recent call last):
  File "main.py", line 180, in <module>
    main()
  File "main.py", line 137, in main
    method.online_step(data, samples_cnt, args.n_worker)
  File "/home/user/Desktop/smh/iclr/i-Blurry/methods/clib.py", line 59, in online_step
    iterations=int(self.num_updates), stream_batch_size=0)
  File "/home/user/Desktop/smh/iclr/i-Blurry/methods/clib.py", line 96, in online_train
    logit, loss = self.model_forward(x, y)
  File "/home/user/Desktop/smh/iclr/i-Blurry/methods/er_baseline.py", line 183, in model_forward
    logit = self.model(x)
  File "/home/user/anaconda3/envs/minhyuk/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/user/Desktop/smh/iclr/i-Blurry/models/reactnet.py", line 187, in forward
    x = block(x)
  File "/home/user/anaconda3/envs/minhyuk/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/user/Desktop/smh/iclr/i-Blurry/models/reactnet.py", line 134, in forward
    out1 = self.bn1(out1)
  File "/home/user/anaconda3/envs/minhyuk/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/user/anaconda3/envs/minhyuk/lib/python3.7/site-packages/torch/nn/modules/batchnorm.py", line 179, in forward
    self.eps,
  File "/home/user/anaconda3/envs/minhyuk/lib/python3.7/site-packages/torch/nn/functional.py", line 2419, in batch_norm
    _verify_batch_size(input.size())
  File "/home/user/anaconda3/envs/minhyuk/lib/python3.7/site-packages/torch/nn/functional.py", line 2387, in _verify_batch_size
    raise ValueError("Expected more than 1 value per channel when training, got input size {}".format(size))
ValueError: Expected more than 1 value per channel when training, got input size torch.Size([1, 512, 1, 1])
